{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/warren/beepboop/apps/web/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  createKernelAccount,\n  createKernelAccountClient,\n  createZeroDevPaymasterClient,\n} from \"@zerodev/sdk\";\nimport {\n  PasskeyValidatorContractVersion,\n  WebAuthnMode,\n  toPasskeyValidator,\n  toWebAuthnKey,\n} from \"@zerodev/passkey-validator\";\nimport { getEntryPoint, KERNEL_V3_1 } from \"@zerodev/sdk/constants\";\nimport React, { useState, useEffect } from 'react';\nimport { createPublicClient, http, formatUnits, parseAbi, parseUnits, encodeFunctionData, isAddress } from \"viem\";\nimport { sepolia } from \"viem/chains\";\n\n// ZeroDev configuration - Replace with your actual project ID\nconst BUNDLER_URL = \"https://rpc.zerodev.app/api/v3/b4bb59f8-71ab-45d7-b225-3b3be4e39db0/chain/11155111\";\nconst PAYMASTER_URL = \"https://rpc.zerodev.app/api/v3/b4bb59f8-71ab-45d7-b225-3b3be4e39db0/chain/11155111\";\nconst PASSKEY_SERVER_URL = \"https://passkeys.zerodev.app/api/v3/b4bb59f8-71ab-45d7-b225-3b3be4e39db0\";\n\nconst CHAIN = sepolia;\nconst entryPoint = getEntryPoint(\"0.7\");\nconst kernelVersion = KERNEL_V3_1;\n\n// USDC contract on Sepolia testnet\nconst USDC_CONTRACT_ADDRESS = \"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238\"; // Sepolia USDC\nconst USDC_ABI = parseAbi([\n  \"function balanceOf(address owner) external view returns (uint256)\",\n  \"function decimals() external view returns (uint8)\",\n  \"function symbol() external view returns (string)\",\n  \"function transfer(address to, uint256 amount) external returns (bool)\",\n]);\n\nconst publicClient = createPublicClient({\n  transport: http(),\n  chain: CHAIN,\n});\n\nlet kernelAccount: any;\nlet kernelClient: any;\n\nconst BeepBoopWallet = () => {\n  const [mounted, setMounted] = useState(false);\n  const [currentPage, setCurrentPage] = useState('welcome'); // 'welcome', 'register', 'login', 'wallet', 'send'\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) return null;\n\n  const handleRegister = () => {\n    setCurrentPage('register');\n  };\n\n  const handleLogin = async () => {\n    setIsLoggingIn(true);\n    \n    try {\n      console.log(\"Attempting passkey login\");\n      \n      // Create WebAuthn key for login\n      const webAuthnKey = await toWebAuthnKey({\n        passkeyName: \"beepboop-wallet\", // Use a consistent name for login\n        passkeyServerUrl: PASSKEY_SERVER_URL,\n        mode: WebAuthnMode.Login,\n      });\n\n      // Create passkey validator\n      const passkeyValidator = await toPasskeyValidator(publicClient, {\n        webAuthnKey,\n        kernelVersion,\n        entryPoint,\n        validatorContractVersion: PasskeyValidatorContractVersion.V0_0_2,\n      });\n\n      // Create kernel account\n      kernelAccount = await createKernelAccount(publicClient, {\n        entryPoint,\n        kernelVersion,\n        plugins: {\n          sudo: passkeyValidator,\n        },\n      });\n\n      // Create kernel client with paymaster\n      kernelClient = createKernelAccountClient({\n        account: kernelAccount,\n        chain: CHAIN,\n        bundlerTransport: http(BUNDLER_URL),\n        paymaster: {\n          getPaymasterData: async (userOperation) => {\n            const zeroDevPaymaster = await createZeroDevPaymasterClient({\n              chain: CHAIN,\n              transport: http(PAYMASTER_URL),\n            });\n            return zeroDevPaymaster.sponsorUserOperation({\n              userOperation,\n            });\n          },\n        },\n      });\n\n      console.log(\"Login successful, account:\", kernelAccount.address);\n      setCurrentPage('wallet');\n      \n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      alert(\"Login failed. Please try again or register a new account.\");\n    } finally {\n      setIsLoggingIn(false);\n    }\n  };\n\n  // Spinner component for loading states\n  const Spinner = () => (\n    <svg\n      className=\"animate-spin h-5 w-5 text-white\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n      />\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      />\n    </svg>\n  );\n\n  // Registration Page Component\n  const RegistrationPage = () => {\n    const [username, setUsername] = useState(\"\");\n    const [isRegistering, setIsRegistering] = useState(false);\n    const [accountAddress, setAccountAddress] = useState(\"\");\n\n    const handlePasskeyRegister = async () => {\n      if (!username.trim()) {\n        alert(\"Please enter a username\");\n        return;\n      }\n\n      setIsRegistering(true);\n      \n      try {\n        console.log(\"Creating passkey for username:\", username);\n        \n        // Create WebAuthn key for registration\n        const webAuthnKey = await toWebAuthnKey({\n          passkeyName: username,\n          passkeyServerUrl: PASSKEY_SERVER_URL,\n          mode: WebAuthnMode.Register,\n        });\n\n        // Create passkey validator\n        const passkeyValidator = await toPasskeyValidator(publicClient, {\n          webAuthnKey,\n          kernelVersion,\n          entryPoint,\n          validatorContractVersion: PasskeyValidatorContractVersion.V0_0_2,\n        });\n\n        // Create kernel account\n        kernelAccount = await createKernelAccount(publicClient, {\n          entryPoint,\n          kernelVersion,\n          plugins: {\n            sudo: passkeyValidator,\n          },\n        });\n\n        // Create kernel client with paymaster\n        kernelClient = createKernelAccountClient({\n          account: kernelAccount,\n          chain: CHAIN,\n          bundlerTransport: http(BUNDLER_URL),\n          paymaster: {\n            getPaymasterData: async (userOperation) => {\n              const zeroDevPaymaster = await createZeroDevPaymasterClient({\n                chain: CHAIN,\n                transport: http(PAYMASTER_URL),\n              });\n              return zeroDevPaymaster.sponsorUserOperation({\n                userOperation,\n              });\n            },\n          },\n        });\n\n        console.log(\"Account created successfully:\", kernelAccount.address);\n        setAccountAddress(kernelAccount.address);\n        \n      } catch (error) {\n        console.error(\"Registration failed:\", error);\n        alert(\"Registration failed. Please try again.\");\n      } finally {\n        setIsRegistering(false);\n      }\n    };\n\n    const goBack = () => {\n      setCurrentPage('welcome');\n    };\n\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\">\n        <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md relative\">\n          {/* Header */}\n          <div className=\"text-center mb-8\">\n            <button\n              onClick={goBack}\n              className=\"absolute top-4 left-4 p-2 text-gray-600 hover:text-gray-800 transition-colors\"\n            >\n              ← Back\n            </button>\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-full mb-4\">\n              <span className=\"text-2xl\">🔐</span>\n            </div>\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Create Your Account</h1>\n            <p className=\"text-gray-600\">Set up your secure passkey wallet</p>\n          </div>\n\n          {!accountAddress ? (\n            <>\n              {/* Username Input */}\n              <div className=\"space-y-4 mb-6\">\n                <div>\n                  <label htmlFor=\"reg-username\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Choose a username\n                  </label>\n                  <input\n                    id=\"reg-username\"\n                    type=\"text\"\n                    placeholder=\"Enter your username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors text-gray-900 placeholder-gray-500\"\n                    disabled={isRegistering}\n                  />\n                </div>\n              </div>\n\n              {/* Create Passkey Button */}\n              <button\n                onClick={handlePasskeyRegister}\n                disabled={isRegistering}\n                className=\"w-full flex items-center justify-center px-4 py-3 bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-medium rounded-lg hover:from-blue-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n              >\n                {isRegistering ? (\n                  <>\n                    <Spinner />\n                    <span className=\"ml-2\">Creating Passkey...</span>\n                  </>\n                ) : (\n                  <>\n                    <span className=\"mr-2\">🔑</span>\n                    Create Passkey\n                  </>\n                )}\n              </button>\n\n              {/* Info Section */}\n              <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n                <h3 className=\"text-sm font-medium text-blue-900 mb-2\">What is a passkey?</h3>\n                <p className=\"text-xs text-blue-700\">\n                  A passkey uses your device's biometric authentication (fingerprint, face, etc.) \n                  to securely access your wallet. No passwords needed!\n                </p>\n              </div>\n            </>\n          ) : (\n            /* Success State */\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-2xl\">✅</span>\n              </div>\n              <h2 className=\"text-xl font-bold text-gray-900 mb-2\">Account Created!</h2>\n              <p className=\"text-gray-600 mb-4\">Your secure wallet is ready to use</p>\n              \n              <div className=\"bg-gray-50 rounded-lg p-4 mb-6\">\n                <p className=\"text-xs text-gray-500 mb-1\">Your wallet address:</p>\n                <p className=\"font-mono text-sm text-gray-800 break-all\">{accountAddress}</p>\n              </div>\n\n              <button\n                onClick={() => setCurrentPage('wallet')}\n                className=\"w-full px-4 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white font-medium rounded-lg hover:from-green-600 hover:to-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition-all duration-200\"\n              >\n                Open Wallet\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  // Welcome Page Component\n  const WelcomePage = () => (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-full mb-4\">\n            <span className=\"text-2xl\">🤖</span>\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">beepboop</h1>\n          <p className=\"text-gray-600\">Your secure stablecoin wallet</p>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"space-y-3\">\n          <button\n            onClick={handleRegister}\n            className=\"w-full flex items-center justify-center px-4 py-3 bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-medium rounded-lg hover:from-blue-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200\"\n          >\n            Register\n          </button>\n\n          <button\n            onClick={handleLogin}\n            disabled={isLoggingIn}\n            className=\"w-full flex items-center justify-center px-4 py-3 bg-white text-gray-700 font-medium rounded-lg border-2 border-gray-300 hover:border-gray-400 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n          >\n            {isLoggingIn ? (\n              <>\n                <Spinner />\n                <span className=\"ml-2\">Signing In...</span>\n              </>\n            ) : (\n              \"Log In\"\n            )}\n          </button>\n        </div>\n\n        {/* Footer */}\n        <div className=\"mt-8 text-center\">\n          <p className=\"text-xs text-gray-500\">\n            Powered by ZeroDev passkeys and account abstraction\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n\n  // Send USDC Page Component - Improved version modeled after tutorial\n  const SendUSDCPage = () => {\n    const [recipient, setRecipient] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [isSending, setIsSending] = useState(false);\n    const [currentBalance, setCurrentBalance] = useState(\"0\");\n    const [userOpHash, setUserOpHash] = useState(\"\");\n    const [userOpStatus, setUserOpStatus] = useState(\"\");\n    const [errors, setErrors] = useState({\n      recipient: \"\",\n      amount: \"\",\n    });\n\n    // Fetch current balance for validation\n    useEffect(() => {\n      const fetchBalance = async () => {\n        if (!kernelAccount?.address) return;\n        \n        try {\n          const balance = await publicClient.readContract({\n            address: USDC_CONTRACT_ADDRESS,\n            abi: USDC_ABI,\n            functionName: \"balanceOf\",\n            args: [kernelAccount.address],\n          });\n          setCurrentBalance(formatUnits(balance, 6));\n        } catch (error) {\n          console.error(\"Error fetching balance for send:\", error);\n        }\n      };\n      \n      fetchBalance();\n    }, []);\n\n    // Validation function\n    const validateForm = () => {\n      const newErrors = { recipient: \"\", amount: \"\" };\n      let isValid = true;\n\n      if (!recipient.trim()) {\n        newErrors.recipient = \"Recipient address is required\";\n        isValid = false;\n      } else if (!isAddress(recipient)) {\n        newErrors.recipient = \"Invalid Ethereum address\";\n        isValid = false;\n      }\n\n      if (!amount.trim()) {\n        newErrors.amount = \"Amount is required\";\n        isValid = false;\n      } else {\n        const numAmount = parseFloat(amount);\n        if (isNaN(numAmount) || numAmount <= 0) {\n          newErrors.amount = \"Amount must be greater than 0\";\n          isValid = false;\n        } else if (numAmount > parseFloat(currentBalance)) {\n          newErrors.amount = \"Insufficient balance\";\n          isValid = false;\n        }\n      }\n\n      setErrors(newErrors);\n      return isValid;\n    };\n\n    // Handle send transaction - modeled after tutorial's sendUserOp\n    const handleSendUSDC = async () => {\n      if (!validateForm()) return;\n      \n      setIsSending(true);\n      setUserOpStatus(\"Sending USDC...\");\n      setUserOpHash(\"\");\n\n      try {\n        console.log(`Sending ${amount} USDC to ${recipient}`);\n\n        // Send UserOp with USDC transfer - following tutorial pattern\n        const userOpHash = await kernelClient.sendUserOperation({\n          callData: await kernelAccount.encodeCalls([\n            {\n              to: USDC_CONTRACT_ADDRESS,\n              value: BigInt(0),\n              data: encodeFunctionData({\n                abi: USDC_ABI,\n                functionName: \"transfer\",\n                args: [recipient as `0x${string}`, parseUnits(amount, 6)],\n              }),\n            },\n          ]),\n        });\n\n        console.log(\"UserOp submitted:\", userOpHash);\n        setUserOpHash(userOpHash);\n        setUserOpStatus(\"Transaction submitted, waiting for confirmation...\");\n\n        // Wait for the UserOp to be included on-chain - following tutorial pattern\n        const receipt = await kernelClient.waitForUserOperationReceipt({\n          hash: userOpHash,\n        });\n\n        console.log(\"UserOp confirmed:\", receipt.userOpHash);\n        console.log(\"TxHash:\", receipt.receipt.transactionHash);\n        \n        // Update status with success message including link\n        const successMessage = `✅ Transaction confirmed! <a href=\"https://jiffyscan.xyz/userOpHash/${userOpHash}?network=sepolia\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-blue-500 hover:text-blue-700\">View on JiffyScan</a>`;\n        setUserOpStatus(successMessage);\n\n        // Optional: Auto-navigate back after a delay\n        setTimeout(() => {\n          setRecipient(\"\");\n          setAmount(\"\");\n          setUserOpHash(\"\");\n          setUserOpStatus(\"\");\n          setCurrentPage('wallet');\n        }, 3000);\n\n      } catch (error) {\n        console.error(\"Send transaction failed:\", error);\n        setUserOpStatus(\"❌ Transaction failed. Please try again.\");\n      } finally {\n        setIsSending(false);\n      }\n    };\n\n    const goBack = () => {\n      setCurrentPage('wallet');\n    };\n\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\">\n        <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md relative\">\n          {/* Header */}\n          <div className=\"text-center mb-8\">\n            <button\n              onClick={goBack}\n              className=\"absolute top-4 left-4 p-2 text-gray-600 hover:text-gray-800 transition-colors\"\n            >\n              ← Back\n            </button>\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-full mb-4\">\n              <span className=\"text-2xl\">📤</span>\n            </div>\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Send USDC</h1>\n            <p className=\"text-gray-600\">Transfer USDC to another wallet</p>\n          </div>\n\n          {/* Balance Display */}\n          <div className=\"bg-blue-50 rounded-lg p-4 mb-6\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm font-medium text-gray-700\">Available Balance</span>\n              <span className=\"text-lg font-bold text-blue-600\">${currentBalance} USDC</span>\n            </div>\n          </div>\n\n          {/* Send Form */}\n          <div className=\"space-y-4\">\n            {/* Recipient Address */}\n            <div>\n              <label htmlFor=\"recipient\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Recipient Address\n              </label>\n              <input\n                id=\"recipient\"\n                type=\"text\"\n                placeholder=\"0x...\"\n                value={recipient}\n                onChange={(e) => setRecipient(e.target.value)}\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 outline-none transition-colors text-gray-900 placeholder-gray-500 ${\n                  errors.recipient ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : 'border-gray-300 focus:border-blue-500'\n                }`}\n                disabled={isSending}\n              />\n              {errors.recipient && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.recipient}</p>\n              )}\n            </div>\n\n            {/* Amount */}\n            <div>\n              <label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Amount (USDC)\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"amount\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  placeholder=\"0.00\"\n                  value={amount}\n                  onChange={(e) => setAmount(e.target.value)}\n                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 outline-none transition-colors text-gray-900 placeholder-gray-500 ${\n                    errors.amount ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : 'border-gray-300 focus:border-blue-500'\n                  }`}\n                  disabled={isSending}\n                />\n                <button\n                  onClick={() => setAmount(currentBalance)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-xs text-blue-500 hover:text-blue-700 font-medium\"\n                  disabled={isSending}\n                >\n                  MAX\n                </button>\n              </div>\n              {errors.amount && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.amount}</p>\n              )}\n            </div>\n\n            {/* Send Button */}\n            <button\n              onClick={handleSendUSDC}\n              disabled={isSending || !recipient.trim() || !amount.trim()}\n              className=\"w-full flex items-center justify-center px-4 py-3 bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-medium rounded-lg hover:from-blue-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n            >\n              {isSending ? (\n                <>\n                  <Spinner />\n                  <span className=\"ml-2\">Sending...</span>\n                </>\n              ) : (\n                <>\n                  <span className=\"mr-2\">📤</span>\n                  Send USDC\n                </>\n              )}\n            </button>\n\n            {/* UserOp Status Display - Following tutorial pattern */}\n            {userOpHash && (\n              <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n                <div className=\"text-sm\">\n                  <p className=\"font-medium text-gray-900 mb-2\">Transaction Status:</p>\n                  <div\n                    className=\"text-gray-700\"\n                    dangerouslySetInnerHTML={{\n                      __html: userOpStatus\n                    }}\n                  />\n                  {userOpHash && (\n                    <div className=\"mt-2\">\n                      <p className=\"text-xs text-gray-500\">UserOp Hash:</p>\n                      <p className=\"font-mono text-xs text-gray-800 break-all\">{userOpHash}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Transaction Info */}\n            <div className=\"mt-4 p-4 bg-yellow-50 rounded-lg\">\n              <h3 className=\"text-sm font-medium text-yellow-900 mb-2\">Transaction Details</h3>\n              <ul className=\"text-xs text-yellow-700 space-y-1\">\n                <li>• Network: Sepolia Testnet</li>\n                <li>• Gas fees: Sponsored by paymaster</li>\n                <li>• Transaction is irreversible</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Wallet Page Component\n  const WalletPage = () => {\n    const [usdcBalance, setUsdcBalance] = useState(\"0.00\");\n    const [isLoadingBalance, setIsLoadingBalance] = useState(true);\n\n    // Function to fetch USDC balance\n    const fetchUSDCBalance = async () => {\n      if (!kernelAccount?.address) return;\n      \n      setIsLoadingBalance(true);\n      try {\n        console.log(\"Fetching USDC balance for:\", kernelAccount.address);\n        \n        // Read USDC balance from contract\n        const balance = await publicClient.readContract({\n          address: USDC_CONTRACT_ADDRESS,\n          abi: USDC_ABI,\n          functionName: \"balanceOf\",\n          args: [kernelAccount.address],\n        });\n\n        // Format balance (USDC has 6 decimals)\n        const formattedBalance = formatUnits(balance, 6);\n        setUsdcBalance(parseFloat(formattedBalance).toFixed(2));\n        \n        console.log(\"USDC Balance:\", formattedBalance);\n      } catch (error) {\n        console.error(\"Error fetching USDC balance:\", error);\n        setUsdcBalance(\"Error\");\n      } finally {\n        setIsLoadingBalance(false);\n      }\n    };\n\n    // Fetch balance when component mounts\n    useEffect(() => {\n      fetchUSDCBalance();\n    }, [kernelAccount]);\n\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\">\n        <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md\">\n          <div className=\"text-center mb-8\">\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-green-500 to-green-600 rounded-full mb-4\">\n              <span className=\"text-2xl\">💰</span>\n            </div>\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Your Wallet</h1>\n            <p className=\"text-gray-600\">Welcome to your secure stablecoin wallet</p>\n          </div>\n\n          {kernelAccount && (\n            <div className=\"bg-gray-50 rounded-lg p-4 mb-6\">\n              <p className=\"text-xs text-gray-500 mb-1\">Wallet Address:</p>\n              <p className=\"font-mono text-sm text-gray-800 break-all\">{kernelAccount.address}</p>\n            </div>\n          )}\n\n          <div className=\"space-y-3\">\n            {/* USDC Balance Display */}\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <div className=\"flex justify-between items-center\">\n                <div className=\"flex items-center\">\n                  <span className=\"text-sm font-medium text-gray-700\">USDC Balance</span>\n                  {isLoadingBalance && (\n                    <div className=\"ml-2\">\n                      <svg className=\"animate-spin h-4 w-4 text-blue-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                    </div>\n                  )}\n                </div>\n                <div className=\"flex items-center\">\n                  <span className=\"text-lg font-bold text-blue-600\">${usdcBalance}</span>\n                  <button\n                    onClick={fetchUSDCBalance}\n                    disabled={isLoadingBalance}\n                    className=\"ml-2 p-1 text-blue-500 hover:text-blue-700 disabled:opacity-50\"\n                    title=\"Refresh balance\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n              \n              {/* Network Info */}\n              <div className=\"mt-2 text-xs text-gray-500\">\n                Sepolia Testnet • Contract: {USDC_CONTRACT_ADDRESS.slice(0, 8)}...\n              </div>\n            </div>\n\n            <button\n              onClick={() => setCurrentPage('send')}\n              className=\"w-full px-4 py-3 bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-medium rounded-lg hover:from-blue-600 hover:to-indigo-700 transition-all duration-200\"\n            >\n              Send USDC\n            </button>\n\n            <button\n              onClick={() => alert(\"Receive functionality coming soon!\")}\n              className=\"w-full px-4 py-3 bg-white text-gray-700 font-medium rounded-lg border-2 border-gray-300 hover:border-gray-400 hover:bg-gray-50 transition-all duration-200\"\n            >\n              Receive USDC\n            </button>\n          </div>\n\n          <button\n            onClick={() => setCurrentPage('welcome')}\n            className=\"w-full mt-6 px-4 py-2 text-sm text-gray-500 hover:text-gray-700 transition-colors\"\n          >\n            Sign Out\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  // Render current page\n  if (currentPage === 'register') {\n    return <RegistrationPage />;\n  }\n\n  if (currentPage === 'send') {\n    return <SendUSDCPage />;\n  }\n\n  if (currentPage === 'wallet') {\n    return <WalletPage />;\n  }\n\n  return <WelcomePage />;\n};\n\nexport default BeepBoopWallet;"],"names":[],"mappings":"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","debugId":null}}]
}